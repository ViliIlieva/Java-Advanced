package Exam;

import java.util.*;
import java.util.stream.Collectors;

public class ItsChocolateTime {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        ArrayDeque<Double> milk = Arrays.stream(scanner.nextLine().split(" "))
                .map(Double::parseDouble)
                .collect(Collectors.toCollection(ArrayDeque::new));

        ArrayDeque<Double> cacaoPowder = new ArrayDeque<>();
        Arrays.stream(scanner.nextLine().split(" "))
                .map(Double::parseDouble)
                .forEach(cacaoPowder::push);

        double percentage = 0.0;

        Map<String, Integer> preparedChocolate = new TreeMap<>();

        preparedChocolate.put("Milk Chocolate", 0);
        preparedChocolate.put("Dark Chocolate", 0);
        preparedChocolate.put("Baking Chocolate", 0);

        while (!milk.isEmpty() && !cacaoPowder.isEmpty()) {
            int newValue=0;
            double currentMilk = milk.poll();
            double currentCacao = cacaoPowder.pop();
            percentage = (currentCacao/ (currentMilk+currentCacao))*100;
            String chocolateType;
            if (percentage == 30.00) {
                chocolateType = "Milk Chocolate";
                newValue = preparedChocolate.get(chocolateType)+1;
                preparedChocolate.put(chocolateType, newValue);
            } else if (percentage == 50.00) {
                chocolateType = "Dark Chocolate";
                newValue = preparedChocolate.get(chocolateType)+1;
                preparedChocolate.put(chocolateType, newValue);
            } else if (percentage == 100.00) {
                chocolateType = "Baking Chocolate";
                newValue = preparedChocolate.get(chocolateType)+1;
                preparedChocolate.put(chocolateType, newValue);
            } else{
                currentMilk = currentMilk +10;
                milk.offer(currentMilk);
            }
        }
        boolean allChocolateArePrepared = preparedChocolate.entrySet().stream().allMatch(e->e.getValue()>0);
        if(allChocolateArePrepared){
            System.out.println("Itâ€™s a Chocolate Time. All chocolate types are prepared.");
            preparedChocolate.entrySet()
                    .forEach(e -> System.out.println("# " + e.getKey() + " --> " + e.getValue()));
        }else {
            System.out.println("Sorry, but you didn't succeed to prepare all types of chocolates.");
            preparedChocolate.entrySet().stream().filter(e -> e.getValue()>0)
                    .forEach(e -> System.out.println("# " + e.getKey() + " --> " + e.getValue()));
        }



    }
}
