import java.util.Scanner;

public class Bee02 {
    private  static int row = 0;
    private  static int col = 0;
    private static boolean outOfMatrix = false;
    private  static int pollinateFlowers = 0;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());
        String [][] matrix = new String[n][n];

        //fill matrix
        for (int i = 0; i < n; i++) {
            String [] input = scanner.nextLine().split("");
            for (int j = 0; j < n; j++) {
                String currentSymbol = input[j];
                matrix[i][j] = currentSymbol;
                if(currentSymbol.equals("B")){
                    row = i;
                    col = j;
                }
            }
        }
        String command = scanner.nextLine();
        while (!command.equals("End")){
            matrix[row][col] = ".";
            move(matrix, command);


            if(outOfMatrix){
                System.out.println("The bee got lost!");
                break;
            }
            if(matrix[row][col].equals("f")){
                pollinateFlowers++;
                matrix[row][col] = "B";
            }else  if(matrix[row][col].equals("O")){
                matrix[row][col] = ".";
                move(matrix,command);
                if(matrix[row][col].equals("f")) {
                    pollinateFlowers++;
                }
                if(outOfMatrix){
                    matrix[row][col] = ".";
                    break;
                }
                matrix[row][col] = "B";
            }else if(matrix[row][col].equals(".")){
                matrix[row][col] = "B";
            }
            command = scanner.nextLine();
        }
        if (pollinateFlowers>=5){
            System.out.printf("Great job, the bee manage to pollinate %d flowers!%n",pollinateFlowers);
        }else {
            System.out.printf("The bee couldn't pollinate the flowers, she needed %d flowers more%n",5-pollinateFlowers);
        }
        printMatrix(matrix);
    }

    private static void move(String [][] matrix, String command){
        int n = matrix.length - 1;
        switch (command){
            case "up":
                if(row != 0){
                    row--;
                }else {
                    outOfMatrix = true;
                }
                break;
            case "down":
                if(row != n){
                    row++;
                }else{
                    outOfMatrix = true;
                }
                break;
            case "right":
                if(col != n){
                    col++;
                }else {
                    outOfMatrix = true;
                }
                break;
            case "left":
                if(col != 0){
                    col--;
                }else{
                    outOfMatrix = true;
                }
                break;
        }
    }

    public static void printMatrix(String[][]matrix){
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix.length; j++) {
                System.out.print(matrix[i][j]);
            }
            System.out.println();
        }
    }
}
