import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class Python02 {
    private static int row = 0;
    private static int col = 0;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());
        List<String> commands = Arrays.stream(scanner.nextLine().split(", "))
                .collect(Collectors.toList());
        char [][] matrix = new char[n][n];
        int pythonLength = 1;
        boolean loseGame = false;
        int foodCounter = 0;

        //fill matrix
        for (int i = 0; i < n; i++) {
            String [] input = scanner.nextLine().split(" ");
            for (int j = 0; j < n; j++) {
               char currentChar = input[j].charAt(0);
               matrix[i][j] = currentChar;
               if(currentChar == 's'){
                   row = i;
                   col = j;
               }
               if(currentChar == 'f'){
                   foodCounter++;
               }
            }
        }

        for (int i = 0; i < commands.size(); i++) {
            String command = commands.get(i);
            move(matrix, command);
            if(matrix[row][col] == 'f'){
                foodCounter--;
                pythonLength++;
            } else if (matrix[row][col] == 'e') {
                loseGame = true;
                break;
            }
        }
        if(foodCounter == 0){
            System.out.println("You win! Final python length is " + pythonLength);
        } else if (foodCounter > 0 && !loseGame) {
            System.out.printf("You lose! There is still %d food to be eaten.", foodCounter);
        } else if (loseGame) {
            System.out.println("You lose! Killed by an enemy!");
        }
    }
    public static void move(char [][] matrix, String command){
        int n = matrix.length-1;
        switch (command){
            case "up":
                if(row == 0){
                    row = n;
                }else{
                    row--;
                }
                break;
            case "down":
                if(row == n){
                    row = 0;
                }else{
                    row++;
                }
                break;
            case "left":
                if(col == 0){
                    col = n;
                }else {
                    col--;
                }
                break;
            case "right":
                if(col == n){
                    col = 0;
                }else {
                    col++;
                }
                break;
        }
    }
}
