package CompanyRoster;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());
        List<Employee> list = new ArrayList<>();
        List<Department> departmentList = new ArrayList<>();
        Employee employee = null;

        for (int i = 0; i < n; i++) {
            String[] input = scanner.nextLine().split(" ");
            String name = input[0];
            Double salary = Double.parseDouble(input[1]);
            String position = input[2];
            String department = input[3];
            if (input.length > 4) {
                String email = "";
                int age = 0;
                if (input.length == 5) {
                    if (input[4].length() > 2) {
                        email = input[4];
                        age = -1;
                    } else {
                        email = "n/a";
                        age = Integer.parseInt(input[4]);
                    }
                } else if (input.length == 6) {
                    email = input[4];
                    age = Integer.parseInt(input[5]);
                }
                employee = new Employee(name, salary, position, department, email, age);
                list.add(employee);
            } else {
                employee = new Employee(name, salary, position, department);
                list.add(employee);
            }

            boolean departmentExists = departmentList.stream().filter(dep -> dep.getName().equals(department)).count() >= 1;
            if (!departmentExists) {
                departmentList.add(new Department(department));
            }
            Department currentDepartment = departmentList.stream().filter(dep -> dep.getName().equals(department)).findFirst().get();
            currentDepartment.getEmployees().add(employee);
        }
        Department highestPaidDepartment = departmentList.stream()
                .max(Comparator.comparingDouble(department -> department.calculateAverageSalary()))
                .get();
        System.out.printf("Highest Average Salary: %s%n", highestPaidDepartment.getName());

        highestPaidDepartment.getEmployees().stream()
                .sorted((e1, e2) -> Double.compare(e2.getSalary(), e1.getSalary()))
                .forEach(System.out::println);
    }
}
